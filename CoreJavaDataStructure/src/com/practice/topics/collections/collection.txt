
Time and space complexity of algorithms
https://www.youtube.com/watch?v=r58oVFCaJRw

	java.util.Collection is the root interface of Collections Framework.some of the methods 
	that it provides are  size(), iterator(),add(), remove(), clear()
	
	
	java.util.Map is the only interface that does not inherit from Collection interface.
	
	Implementation classes
	Some of the important collections classes are as below.
	ArrayList
	LinkedList
	HashMap
	TreeMap
	HashSet
	TreeSet
	
	
	Collections revision
	https://github.com/in28minutes/JavaInterviewQuestionsAndAnswers/blob/master/docs/collections.md
	
	Internal working of HashSet
	https://www.geeksforgeeks.org/internal-working-of-sethashset-in-java/
	whenever we create a HashSet, it internally creates a HashMap and if we insert an element into this 
	HashSet using add() method, it actually call put() method on internally created HashMap object with 
	element you have specified as it’s key and constant Object called “PRESENT” as it’s value. So we can 
	say that a Set achieves uniqueness internally through HashMap
	
	
	
		- Hashtable belongs to the Collection framework; ConcurrentHashMap belongs to the Executor framework.
		- Hashtable uses single lock for whole data. ConcurrentHashMap uses multiple locks on segment level 
		  (16 by default) instead of object level i.e. whole Map.
		- ConcurrentHashMap locking is applied only for updates. In case of retrievals, it allows full concurrency, 
		  retrievals reflect the results of the most recently completed update operations. So reads can happen very 
		  fast while writes are done with a lock.
		- ConcurrentHashMap doesn't throw a ConcurrentModificationException if one thread tries to modify it while 
		  another is iterating over it and does not allow null values.
		- ConcurrentHashMap returns Iterator, which fails-safe (i.e. iterator will make a copy of the internal data 
		  structure) on concurrent modification.
		- ConcurrentHashMap uses a database shards logic (Segment<K, V>[] segments) is known as Concurrency-Level,
		  i.e. divides the data into shards(segments) than puts locks on each shard (segment) instead of putting a 
		  single lock for whole data (Map). The default value is 16
		  
		  
		

			Assume Hashtable and ConcurrentHashMap are two types of Homes.
			Hashtable locks home's main door.
			ConcurrentHashMap locks specific room door instead of main door.
			
			
			REST(REpresentational State Transfer)
			REpresentational State of an Object is Transferred is REST i.e. we don't send Object, we send state of Object. REST is an architectural style. It doesn’t define so many standards like SOAP. REST is for exposing Public APIs(i.e. Facebook API, Google Maps API) over the internet to handle CRUD operations on data. REST is focused on accessing named resources through a single consistent interface.
			
			SOAP(Simple Object Access Protocol)
			SOAP brings its own protocol and focuses on exposing pieces of application logic (not data) as services. SOAP exposes operations. SOAP is focused on accessing named operations, each operation implement some business logic. Though SOAP is commonly referred to as web services this is misnomer. SOAP has a very little if anything to do with the Web. REST provides true Web services based on URIs and HTTP.
			
			Why REST?
			
			Since REST uses standard HTTP it is much simpler in just about ever way.
			REST is easier to implement, requires less bandwidth and resources.
			REST permits many different data formats where as SOAP only permits XML.
			REST allows better support for browser clients due to its support for JSON.
			REST has better performance and scalability. REST reads can be cached, SOAP based reads cannot be cached.
			If security is not a major concern and we have limited resources. Or we want to create an API that will be easily used by other developers publicly then we should go with REST.
			If we need Stateless CRUD operations then go with REST.
			REST is commonly used in social media, web chat, mobile services and Public APIs like Google Maps.
			RESTful service return various MediaTypes for the same resource, depending on the request header parameter "Accept" as application/xml or application/json for POST and /user/1234.json or GET /user/1234.xml for GET.
			REST services are meant to be called by the client-side application and not the end user directly.
			ST in REST comes from State Transfer. You transfer the state around instead of having the server store it, this makes REST services scalable.
			Why SOAP?
			
			SOAP is not very easy to implement and requires more bandwidth and resources.
			SOAP message request is processed slower as compared to REST and it does not use web caching mechanism.
			WS-Security: While SOAP supports SSL (just like REST) it also supports WS-Security which adds some enterprise security features.
			WS-AtomicTransaction: Need ACID Transactions over a service, you’re going to need SOAP.
			WS-ReliableMessaging: If your application needs Asynchronous processing and a guaranteed level of reliability and security. Rest doesn’t have a standard messaging system and expects clients to deal with communication failures by retrying.
			If the security is a major concern and the resources are not limited then we should use SOAP web services. Like if we are creating a web service for payment gateways, financial and telecommunication related work then we should go with SOAP as here high security is needed.
						